library(randomForest)
library(cluster)
setwd("C:/Users/lcm767/OneDrive - K?benhavns Universitet/Desktop/Projects/Paddus 2018")
set.seed(123)
#14012021
d1<- read_excel("Paddus to Tao_TAO_1412202020.xlsx", sheet = "1512_spread_climate")
names(d1)
e<-d1[,-c(2, 2:42)] #remove non compound rows
prop<-cbind(id = e[, 1], e[, -1]/rowSums(e[, -1]))
propdatanstd<-cbind(d1[,c(2, 2:42)],prop) #bind back ID and density
write.csv(propdatanstd, "14012021_Paddus_proportions.csv")


total<-propdatanstd

#yellow #f6d746 c
#organge s #e55c30
#purple  w #2e1978
total$warming.x

total$Date[total$Date=="30.06.2018"] <- "June 30"
total$Date[total$Date=="05.07.2018"] <- "July 5"
total$Date[total$Date=="11.07.2018"] <- "July 11"
total$warming[total$warming=="C"] <- "A"


propdatanstd$Date
t1<- subset(total, Date==c("June 30"))
t2<- subset(total, Date==c("July 5"))
t3<- subset(total, Date==c("July 11"))

control_t1<- subset(t1, warming==c("A"))
shading_t1<-subset(t1, warming==c("S"))
warm_t1<-subset(t1, warming==c("W"))

control_t2<- subset(t2, warming==c("A"))
shading_t2<-subset(t2, warming==c("S"))
warm_t2<-subset(t2, warming==c("W"))


control_t3<- subset(t3, warming==c("A"))
shading_t3<-subset(t3, warming==c("S"))
warm_t3<-subset(t3, warming==c("W"))


my_theme=theme(text = element_text(size=17),
               panel.border = element_rect(colour = "black", fill=NA, size=0.5),
               axis.text.x = element_text(size = 15),
               axis.text.y = element_text(size = 15),
               axis.title.x=element_text(size = 17),
               axis.title.y=element_text(size = 17)
               
) 


#######################Fig S3 climate total RF ################
climate_total <-randomForest( x=total[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 
climate_t1 <-randomForest( x=t1[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 
climate_t2 <-randomForest( x=t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 
climate_t3 <-randomForest( x=t3[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 


climate_total_prox<-cmdscale(1-climate_total$proximity)
climate_total_df<-as.data.frame(climate_total_prox, row.names = NULL)
total$warming=as.factor(total$warming)
climate_total_plot=ggplot(climate_total_df, aes(x=V1, y=V2, color=total$warming))+
  geom_point(aes( shape=total$warming,color=total$warming),size=4.5)+theme_classic()+
  guides(col=guide_legend("Climate treatment"))+
  
  ggtitle("June 30 - July 11")+
  scale_color_manual(values=c("#95336f", "#e55c30","#f7a41f"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(total$warming)),
               geom="polygon",alpha=0.05,)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#95336f", "#e55c30","#f7a41f"))


climate_t1_prox<-cmdscale(1-climate_t1$proximity)
climate_t1_df<-as.data.frame(climate_t1_prox, row.names = NULL)
t1$warming=as.factor(t1$warming)
climate_t1_plot=ggplot(climate_t1_df, aes(x=V1, y=V2, color=t1$warming))+
  geom_point(aes( shape=t1$warming,color=t1$warming),size=4.5)+theme_classic()+
  guides(col=guide_legend("Climate treatment"))+
  
  ggtitle("June 30")+
  scale_color_manual(values=c("#95336f", "#e55c30","#f7a41f"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t1$warming)),
               geom="polygon",alpha=0.05,)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#95336f", "#e55c30","#f7a41f"))


climate_t2_prox<-cmdscale(1-climate_t2$proximity)
climate_t2_df<-as.data.frame(climate_t2_prox, row.names = NULL)
t2$warming=as.factor(t2$warming)
climate_t2_plot=ggplot(climate_t2_df, aes(x=V1, y=V2, color=t2$warming))+
  geom_point(aes( shape=t2$warming,color=t2$warming),size=4.5)+theme_classic()+
  guides(col=guide_legend("Climate treatment"))+
  
  ggtitle("July 5")+
  scale_color_manual(values=c("#95336f", "#e55c30","#f7a41f"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t2$warming)),
               geom="polygon",alpha=0.05,)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#95336f", "#e55c30","#f7a41f"))

climate_t3_prox<-cmdscale(1-climate_t3$proximity)
climate_t3_df<-as.data.frame(climate_t3_prox, row.names = NULL)
t3$warming=as.factor(t3$warming)
climate_t3_plot=ggplot(climate_t3_df, aes(x=V1, y=V2, color=t3$warming))+
  geom_point(aes( shape=t3$warming,color=t3$warming),size=4.5)+theme_classic()+
  guides(col=guide_legend("Climate treatment"))+
  
  ggtitle("July 11")+
  scale_color_manual(values=c("#95336f", "#e55c30","#f7a41f"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t3$warming)),
               geom="polygon",alpha=0.05,)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#95336f", "#e55c30","#f7a41f"))


climate_all<-ggarrange(climate_total_plot,climate_t1_plot,climate_t2_plot,climate_t3_plot,
                                 nrow=1, ncol=4, common.legend = TRUE,
                                 labels = c("(a)", "(b)", "(c)", "(d)" ))
climate_all


ggsave("28022021_fig_Ss4_0.05.tiff", dpi = 600, width=14, height = 4,units = "in", device='tiff')



###################################################
g <-randomForest( x=shading_t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

#mds <- MDSplot(g, shading_t2$herbivory, k=2, pch=16, palette=c("skyblue", "orange"))

clusters_pam <- pam(1-g$proximity, k=2, diss = TRUE)
clusters_pam$clustering<-factor(clusters_pam$clustering)
shading_t2$herbivory<-factor(shading_t2$herbivory)
mytable<-table(clusters_pam$clustering, shading_t2$herbivory)

#plot(mds$points[, 1], mds$points[, 2], pch=clusters_pam$clustering+14, col=c("skyblue", "orange")[as.numeric(shading_t2$herbivory)])
#legend("bottomleft", legend=unique(clusters_pam$clustering), pch = 15:17, title = "PAM cluster")
#legend("topleft", legend=unique(shading_t2$herbivory), pch = 16, col=c("skyblue", "orange"), title = "Iris species")


herb_t1_s_prox<-cmdscale(1-herb_t1_s$proximity)
herb_t1_s_df<-as.data.frame(herb_t1_s_prox, row.names = NULL)

ggplot(herb_t2_s_df, aes(x=V1, y=V2, color=shading_t2$herbivory))+
  geom_point(aes(shape=clusters_pam$clustering, color=shading_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable), xmin=0.5, xmax=0.5, ymin=0.2, ymax=0.3)+
  ggtitle("Shading")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme


g_new <- randomForest(shading_t2[, 44:264], y=as.factor(clusters_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new, shading_t2[, 44:264]), clusters_pam$clustering)

varimp.t2_s <- importance(g, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_s)
varImpPlot(g)



########################June 30 looking at the herbivory for each climate treatment separately)#################
#total herb T1
names(t1)
t1_herb1<-randomForest( x=t1[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

t1_herb1_pam <- pam(1-t1_herb1$proximity, k=2, diss = TRUE)
t1_herb1_pam$clustering<-factor(t1_herb1_pam$clustering)
t1$herbivory<-factor(t1$herbivory)
mytable<-table(t1_herb1_pam$clustering, t1$herbivory)


t1_herb1_prox<-cmdscale(1-t1_herb1$proximity)
t1_herb1_df<-as.data.frame(t1_herb1_prox, row.names = NULL)

#pam clustering
t1_herb_plot=ggplot(t1_herb1_df, aes(x=V1, y=V2, color=t1$herbivory))+
  geom_point(aes(shape=t1_herb1_pam$clustering, color=t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable), xmin=0.1, xmax=0.4, ymin=0.3, ymax=0.4)+
  ggtitle("June 30")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t1$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))
#no PAM
t1_herb_plot=ggplot(t1_herb1_df, aes(x=V1, y=V2, color=t1$herbivory))+
  geom_point(aes( shape=t1$herbivory,color=t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"))+
  
  ggtitle("June 30")+
  scale_color_manual(values=c("darkgrey", "black"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t1$herbivory)),
               geom="polygon",alpha=0.05,)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"))+
  labs(x = "Dimension 1", y="Dimension 2")

vir_10 <- inferno(n = 10)

g_new <- randomForest(t1[, 44:264], y=as.factor(t1_herb1_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new, t1[, 44:264]), t1_herb1_pam$clustering)
print(g_new)

#control
herb_t1_c<-randomForest( x=control_t1[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t1_c_pam <- pam(1-herb_t1_c$proximity, k=2, diss = TRUE)
herb_t1_c_pam$clustering<-factor(herb_t1_c_pam$clustering)
control_t1$herbivory<-factor(control_t1$herbivory)
mytable_c<-table(herb_t1_c_pam$clustering, control_t1$herbivory)


herb_t1_c_prox<-cmdscale(1-herb_t1_c$proximity)
herb_t1_c_df<-as.data.frame(herb_t1_c_prox, row.names = NULL)

#PAM
herb_t1_c_plot=ggplot(herb_t1_c_df, aes(x=V1, y=V2, color=control_t1$herbivory))+
  geom_point(aes(shape=herb_t1_c_pam$clustering, color=control_t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_c), xmin=0.5, xmax=0.6, ymin=0.2, ymax=0.3)+
  ggtitle("Control")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t1$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))
#NO PAM
herb_t1_c_plot=ggplot(herb_t1_c_df, aes(x=V1, y=V2, color=control_t1$herbivory))+
  geom_point(aes(shape=control_t1$herbivory, color=control_t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"))+
  
  
  ggtitle("Ambient")+
  scale_color_manual(values=c("darkgrey", "black"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t1$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"))+
  labs(x = "Dimension 1", y="Dimension 2")



g_new <- randomForest(control_t1[, 44:264], y=as.factor(herb_t1_c_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new, control_t1[, 44:264]), herb_t1_c_pam$clustering)

print(g_new)
#shading
herb_t1_s<-randomForest( x=shading_t1[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t1_s_pam <- pam(1-herb_t1_s$proximity, k=2, diss = TRUE)
herb_t1_s_pam$clustering<-factor(herb_t1_s_pam$clustering)
shading_t1$herbivory<-factor(shading_t1$herbivory)
mytable_s<-table(herb_t1_s_pam$clustering, shading_t1$herbivory)


herb_t1_s_prox<-cmdscale(1-herb_t1_s$proximity)
herb_t1_s_df<-as.data.frame(herb_t1_s_prox, row.names = NULL)
#PAM
herb_t1_s_plot=ggplot(herb_t1_s_df, aes(x=V1, y=V2, color=shading_t1$herbivory))+
  geom_point(aes(shape=herb_t1_s_pam$clustering, color=shading_t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_s), xmin=0.45, xmax=0.55, ymin=0.4, ymax=0.45)+
  ggtitle("Shading")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t1$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))
#NO PAM
herb_t1_s_plot=ggplot(herb_t1_s_df, aes(x=V1, y=V2, color=shading_t1$herbivory))+
  geom_point(aes(shape=shading_t1$herbivory, color=shading_t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  ggtitle("Shading")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t1$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

g_new_s <- randomForest(shading_t1[, 44:264], y=as.factor(shading_t1$herbivory), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new_s, shading_t1[, 44:264]), herb_t1_s_pam$clustering)

g_new <- randomForest(shading_t1[, 44:264], y=as.factor(herb_t1_s_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new, shading_t1[, 44:264]), herb_t1_s_pam$clustering)

print(g_new_s)

#warming
herb_t1_w<-randomForest( x=warm_t1[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t1_w_pam <- pam(1-herb_t1_w$proximity, k=2, diss = TRUE)
herb_t1_w_pam$clustering<-factor(herb_t1_w_pam$clustering)
warm_t1$herbivory<-factor(warm_t1$herbivory)
mytable_w<-table(herb_t1_w_pam$clustering, warm_t1$herbivory)


herb_t1_w_prox<-cmdscale(1-herb_t1_w$proximity)
herb_t1_w_df<-as.data.frame(herb_t1_w_prox, row.names = NULL)
#PAM
herb_t1_w_plot=ggplot(herb_t1_w_df, aes(x=V1, y=V2, color=warm_t1$herbivory))+
  geom_point(aes(shape=herb_t1_w_pam$clustering, color=warm_t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_w), xmin=0.4, xmax=0.42, ymin=0.3, ymax=0.4)+
  ggtitle("Warming")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t1$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))

#NO PAM
herb_t1_w_plot=ggplot(herb_t1_w_df, aes(x=V1, y=V2, color=warm_t1$herbivory))+
  geom_point(aes(shape=warm_t1$herbivory, color=warm_t1$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  
  ggtitle("Warming")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t1$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

g_new_w <- randomForest(warm_t1[, 44:264], y=as.factor(warm_t1$herbivory), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new_w, warm_t1[, 44:264]), herb_t1_w_pam$clustering)

print(g_new_w)
t1_herb<-ggarrange(herb_t1_c_plot,herb_t1_s_plot,herb_t1_w_plot,nrow=1, ncol=3, common.legend = TRUE,labels = c("A", "B", "C"))
t1_herb
names(warm_t1)
b.rf<-randomForest(warm_t1$herbivory ~ ., data=warm_t1[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=1000000, proximity=T) 

warm_t1$herbivory<-factor(warm_t1$herbivory)

t1_herbx<-ggarrange(t1_herb_plot,herb_t1_c_plot,herb_t1_s_plot,herb_t1_w_plot,nrow=1, ncol=4, common.legend = TRUE,labels = c("A", "B", "C", "D"))
t1_herbx
##########################################################

########################July 5 looking at the herbivory for each climate treatment separately)##############################
#total herb T2

t2_herb1<-randomForest( x=t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 
print(t2_herb1)
t2_herb1_pam <- pam(1-t2_herb1$proximity, k=2, diss = TRUE)
t2_herb1_pam$clustering<-factor(t2_herb1_pam$clustering)
t2$herbivory<-factor(t2$herbivory)
mytable_t2_herb<-table(t2_herb1_pam$clustering, t2$herbivory)


t2_herb1_prox<-cmdscale(1-t2_herb1$proximity)
t2_herb1_df<-as.data.frame(t2_herb1_prox, row.names = NULL)
#PAM
t2_herb_plot=ggplot(t2_herb1_df, aes(x=V1, y=V2, color=t2$herbivory))+
  geom_point(aes(shape=t2_herb1_pam$clustering, color=t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_t2_herb), xmin=0.2, xmax=0.4, ymin=0.3, ymax=0.4)+
  ggtitle("July 5")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t2$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))
#NO PAM
t2_herb_plot=ggplot(t2_herb1_df, aes(x=V1, y=V2, color=t2$herbivory))+
  geom_point(aes(shape=t2$herbivory, color=t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  
  ggtitle("July 5")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")



ggtitle("July 5")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t2$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))

print(g_new_w)

plot(g_new_w)
print(g_new_w)
g_new_w$predicted

classification <- cbind(t2[1:2], g_new_w$predicted)
classification

varimp <- importance(g_new_w, scale=TRUE)[,3]
sort(varimp)




names(t2)

b.rf<-randomForest(t2$herbivory ~ ., data=t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=1000000, proximity=T) 
names(t2)
#control
herb_t2_c<-randomForest( x=control_t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t2_c_pam <- pam(1-herb_t2_c$proximity, k=2, diss = TRUE)
herb_t2_c_pam$clustering<-factor(herb_t2_c_pam$clustering)
control_t2$herbivory<-factor(control_t2$herbivory)
mytable_c2<-table(herb_t2_c_pam$clustering, control_t2$herbivory)


herb_t2_c_prox<-cmdscale(1-herb_t2_c$proximity)
herb_t2_c_df<-as.data.frame(herb_t2_c_prox, row.names = NULL)

#PAM
herb_t2_c_plot=ggplot(herb_t2_c_df, aes(x=V1, y=V2, color=control_t2$herbivory))+
  geom_point(aes(shape=herb_t2_c_pam$clustering, color=control_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_c2), xmin=-0.6, xmax=-0.5, ymin=-0.3, ymax=-0.25)+
  ggtitle("Ambient")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t2$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))

#NO PAM
herb_t2_c_plot=ggplot(herb_t2_c_df, aes(x=V1, y=V2, color=control_t2$herbivory))+
  geom_point(aes(shape=control_t2$herbivory, color=control_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  
  ggtitle("Ambient")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+labs(x = "Dimension 1", y="Dimension 2")

g_new <- randomForest(control_t2[, 44:264], y=as.factor(herb_t2_c_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new, control_t2[, 44:264]), herb_t2_c_pam$clustering)


#shading
herb_t2_s<-randomForest( x=shading_t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t2_s_pam <- pam(1-herb_t2_s$proximity, k=2, diss = TRUE)
herb_t2_s_pam$clustering<-factor(herb_t2_s_pam$clustering)
shading_t2$herbivory<-factor(shading_t2$herbivory)
mytable_s2<-table(herb_t2_s_pam$clustering, shading_t2$herbivory)


herb_t2_s_prox<-cmdscale(1-herb_t2_s$proximity)
herb_t2_s_df<-as.data.frame(herb_t2_s_prox, row.names = NULL)

#PAM
herb_t2_s_plot=ggplot(herb_t2_s_df, aes(x=V1, y=V2, color=shading_t2$herbivory))+
  geom_point(aes(shape=herb_t2_s_pam$clustering, color=shading_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_s2), xmin=0.5, xmax=0.6, ymin=0.28, ymax=0.35)+
  ggtitle("Shading")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t2$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))

#NO PAM
herb_t2_s_plot=ggplot(herb_t2_s_df, aes(x=V1, y=V2, color=shading_t2$herbivory))+
  geom_point(aes(shape=shading_t2$herbivory, color=shading_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory")
  )+
  ggtitle("Shading")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

set.seed=3
g_new_s <- randomForest(shading_t2[, 44:264], y=as.factor(herb_t2_s_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new_s, shading_t2[, 44:264]), herb_t2_s_pam$clustering)

varimp.t2_s <- importance(g_new_s, scale=TRUE)[,3] #variable importance with highest values ->more imp
print(g_new_s)
sort(varimp.t2_s)
varImpPlot(herb_t2_s)




#warming
herb_t2_w<-randomForest( x=warm_t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t2_w_pam <- pam(1-herb_t2_w$proximity, k=2, diss = TRUE)
herb_t2_w_pam$clustering<-factor(herb_t2_w_pam$clustering)
warm_t2$herbivory<-factor(warm_t2$herbivory)
mytable_w2<-table(herb_t2_w_pam$clustering, warm_t2$herbivory)


herb_t2_w_prox<-cmdscale(1-herb_t2_w$proximity)
herb_t2_w_df<-as.data.frame(herb_t2_w_prox, row.names = NULL)

#PAM
herb_t2_w_plot=ggplot(herb_t2_w_df, aes(x=V1, y=V2, color=warm_t2$herbivory))+
  geom_point(aes(shape=herb_t2_w_pam$clustering, color=warm_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_w2), xmin=-0.51, xmax=-0.4, ymin=-0.51, ymax=-0.4)+
  ggtitle("Warming")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t2$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))
#NO PAM
herb_t2_w_plot=ggplot(herb_t2_w_df, aes(x=V1, y=V2, color=warm_t2$herbivory))+
  geom_point(aes(shape=warm_t2$herbivory, color=warm_t2$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"))+
  
  ggtitle("Warming")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

g_new_w <- randomForest(warm_t2[, 44:264], y=as.factor(herb_t2_w_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new_w, warm_t2[, 44:264]), herb_t2_w_pam$clustering)

t1_herb<-ggarrange(herb_t2_c_plot,herb_t2_s_plot,herb_t2_w_plot,nrow=1, ncol=3, common.legend = TRUE,labels = c("A", "B", "C"))
t1_herb


t1_herbx<-ggarrange(t1_herb_plot,herb_t2_c_plot,herb_t2_s_plot,herb_t2_w_plot,nrow=1, ncol=4, common.legend = TRUE,labels = c("A", "B", "C", "D"))
t1_herbx

varimp.t2_c <- importance(herb_t2_c, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_c)
varImpPlot(herb_t2_c)

varimp.t2_s <- importance(herb_t2_s, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_s)
varImpPlot(herb_t2_s)

varimp.t2_w <- importance(herb_t2_w, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_w)
varImpPlot(herb_t2_w)



t2_herb<-ggarrange(herb_t2_c_plot,herb_t2_s_plot,herb_t2_w_plot,nrow=1, ncol=3, common.legend = TRUE,labels = c("A", "B", "C"))
t2_herb


t2_herbx<-ggarrange(t2_herb_plot,herb_t2_c_plot,herb_t2_s_plot,herb_t2_w_plot,nrow=1, ncol=4, common.legend = TRUE,labels = c("A", "B", "C", "D"))
t2_herbx




###############################################################

########################July 11 looking at the herbivory for each climate treatment separately)##############################
#total herb t3

t3_herb1<-randomForest( x=t3[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

t3_herb1_pam <- pam(1-t3_herb1$proximity, k=2, diss = TRUE)
t3_herb1_pam$clustering<-factor(t3_herb1_pam$clustering)
t3$herbivory<-factor(t3$herbivory)
mytable_t3_herb<-table(t3_herb1_pam$clustering, t3$herbivory)


t3_herb1_prox<-cmdscale(1-t3_herb1$proximity)
t3_herb1_df<-as.data.frame(t3_herb1_prox, row.names = NULL)

#PAM
t3_herb_plot=ggplot(t3_herb1_df, aes(x=V1, y=V2, color=t3$herbivory))+
  geom_point(aes(shape=t3_herb1_pam$clustering, color=t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_t3_herb), xmin=-0.4, xmax=-0.3, ymin=-0.43, ymax=-0.3)+
  ggtitle("July 11")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t3$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))
#NO PAM
t3_herb_plot=ggplot(t3_herb1_df, aes(x=V1, y=V2, color=t3$herbivory))+
  geom_point(aes(shape=t3$herbivory, color=t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  
  ggtitle("July 11")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t3$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

#control
herb_t3_c<-randomForest( x=control_t3[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t3_c_pam <- pam(1-herb_t3_c$proximity, k=2, diss = TRUE)
herb_t3_c_pam$clustering<-factor(herb_t3_c_pam$clustering)
control_t3$herbivory<-factor(control_t3$herbivory)
mytable_c3<-table(herb_t3_c_pam$clustering, control_t3$herbivory)


herb_t3_c_prox<-cmdscale(1-herb_t3_c$proximity)
herb_t3_c_df<-as.data.frame(herb_t3_c_prox, row.names = NULL)
#PAM
herb_t3_c_plot=ggplot(herb_t3_c_df, aes(x=V1, y=V2, color=control_t3$herbivory))+
  geom_point(aes(shape=herb_t3_c_pam$clustering, color=control_t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_c3), xmin=0.4, xmax=0.6, ymin=0.27, ymax=0.35)+
  ggtitle("Control")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t3$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#440154FF", "#DCE318FF"))

#NO PAM
herb_t3_c_plot=ggplot(herb_t3_c_df, aes(x=V1, y=V2, color=control_t3$herbivory))+
  geom_point(aes(shape=control_t3$herbivory, color=control_t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory")
  )+
  
  ggtitle("Ambient")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t3$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+

  labs(x = "Dimension 1", y="Dimension 2")

g_new <- randomForest(control_t3[, 44:264], y=as.factor(herb_t3_c_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new, control_t3[, 44:264]), herb_t3_c_pam$clustering)


#shading
herb_t3_s<-randomForest( x=shading_t3[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t3_s_pam <- pam(1-herb_t3_s$proximity, k=2, diss = TRUE)
herb_t3_s_pam$clustering<-factor(herb_t3_s_pam$clustering)
shading_t3$herbivory<-factor(shading_t3$herbivory)
mytable_s3<-table(herb_t3_s_pam$clustering, shading_t3$herbivory)


herb_t3_s_prox<-cmdscale(1-herb_t3_s$proximity)
herb_t3_s_df<-as.data.frame(herb_t3_s_prox, row.names = NULL)

#PAM
herb_t3_s_plot=ggplot(herb_t3_s_df, aes(x=V1, y=V2, color=shading_t3$herbivory))+
  geom_point(aes(shape=herb_t3_s_pam$clustering, color=shading_t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_s3), xmin=0.38, xmax=0.43, ymin=0.42, ymax=0.49)+
  ggtitle("Shading")+
  scale_color_manual(values=c("#e55c30", "orangered4"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t3$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#e55c30", "orangered4"
))

#NO PAM
herb_t3_s_plot=ggplot(herb_t3_s_df, aes(x=V1, y=V2, color=shading_t3$herbivory))+
  geom_point(aes(shape=shading_t3$herbivory, color=shading_t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory")
  )+
  
  ggtitle("Shading")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t3$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

g_new_s <- randomForest(shading_t3[, 44:264], y=as.factor(herb_t3_s_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new_s, shading_t3[, 44:264]), herb_t3_s_pam$clustering)

#warming
herb_t3_w<-randomForest( x=warm_t3[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=100000, proximity=T) 

herb_t3_w_pam <- pam(1-herb_t3_w$proximity, k=2, diss = TRUE)
herb_t3_w_pam$clustering<-factor(herb_t3_w_pam$clustering)
warm_t3$herbivory<-factor(warm_t3$herbivory)
mytable_w3<-table(herb_t3_w_pam$clustering, warm_t3$herbivory)


herb_t3_w_prox<-cmdscale(1-herb_t3_w$proximity)
herb_t3_w_df<-as.data.frame(herb_t3_w_prox, row.names = NULL)

#PAM
herb_t3_w_plot=ggplot(herb_t3_w_df, aes(x=V1, y=V2, color=warm_t3$herbivory))+
  geom_point(aes(shape=herb_t3_w_pam$clustering, color=warm_t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory"),
         shape=guide_legend("PAM cluster"))+
  annotation_custom(tableGrob(mytable_w3), xmin=0.35, xmax=0.42, ymin=0.33, ymax=0.4)+
  ggtitle("Warming")+
  scale_color_manual(values=c("#f7a41f", "chocolate3"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t3$herbivory)),
               geom="polygon",level=0.95,alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("#f7a41f", "chocolate3"
))
#NO PAM
herb_t3_w_plot=ggplot(herb_t3_w_df, aes(x=V1, y=V2, color=warm_t3$herbivory))+
  geom_point(aes(shape=warm_t3$herbivory, color=warm_t3$herbivory),size=4.5)+theme_classic()+
  guides(col=guide_legend("Herbivory")
  )+
  
  ggtitle("Warming")+
  scale_color_manual(values=c("darkgrey", "black"
))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t3$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"
))+
  labs(x = "Dimension 1", y="Dimension 2")

g_new_w <- randomForest(warm_t3[, 44:264], y=as.factor(herb_t3_w_pam$clustering), keep.forest=TRUE, proximity=TRUE)
table(predict(g_new_w, warm_t3[, 44:264]), herb_t3_w_pam$clustering)

t1_herb<-ggarrange(herb_t3_c_plot,herb_t3_s_plot,herb_t3_w_plot,nrow=1, ncol=3, common.legend = TRUE,labels = c("A", "B", "C"))
t1_herb


t1_herbx<-ggarrange(t1_herb_plot,herb_t3_c_plot,herb_t3_s_plot,herb_t3_w_plot,nrow=1, ncol=4, common.legend = TRUE,labels = c("A", "B", "C", "D"))
t1_herbx

varimp.t3_w <- importance(herb_t3_w, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t3_w)
varImpPlot(herb_t3_w)



t3_herb<-ggarrange(herb_t3_c_plot,herb_t3_s_plot,herb_t3_w_plot,nrow=1, ncol=3, common.legend = TRUE,labels = c("A", "B", "C"))
t3_herb


t3_herbx<-ggarrange(t3_herb1_plot,herb_t3_c_plot,herb_t3_s_plot,herb_t3_w_plot,nrow=1, ncol=4, common.legend = TRUE,labels = c("A", "B", "C", "D"))
t3_herbx



sqt_p=ggplot(SQT, aes(x=herbivory, y=response,  fill=treatment, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap(Date1 ~treatment, ncol=9, nrow=6,)+
  
  ggtitle("Sesquiterpenes (SQTs)")+
  theme_bw() +
  geom_errorbar(aes(ymin = response-SE, ymax = response+SE), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.7))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = response-SE, ymax = response+SE), width=.2, size=0.8,
                position=position_dodge(.9)) 


###############################################################

#total herbivory graph

total_herbivory_graph<-ggarrange(t1_herb_plot,herb_t1_c_plot,herb_t1_s_plot,herb_t1_w_plot,
                                 t2_herb_plot,herb_t2_c_plot,herb_t2_s_plot,herb_t2_w_plot,
                                 t3_herb_plot,herb_t3_c_plot,herb_t3_s_plot,herb_t3_w_plot,
                                 nrow=3, ncol=4, common.legend = TRUE,
                                 labels = c("(a)", "(b)", "(c)", "(d)", "(e)", "(f)", "(g)", "(h)", "(i)", "(j)", "(k)", "(l)"))
total_herbivory_graph


ggsave("0403_fig_S3_all_black_grey_alpha=0.05.tiff", dpi = 600, width=14, height = 12,units = "in", device='tiff')



###########SUPERVISED RF FOR July 5 to obtain error matrix ####################
#T2 total
library(gridExtra)
library(grid)
set.seed(123)
names(t2)
t2$herbivory=as.factor(t2$herbivory)
t2_total <- randomForest(t2[, 44:264], y=as.factor(t2$herbivory), keep.forest=T, proximity=TRUE, mtry=15, importance=T, do.trace=1000, ntree=100000)
print(t2_total)
plot(t2_total)
t2_total
t2.prox<-cmdscale(1-t2_total$proximity)
t2_df<-as.data.frame(t2.prox, row.names = NULL)

t2_total_table <- matrix(c(16,2, 11, 3,15, 17),ncol=3,byrow=TRUE)
colnames(t2_total_table) <- c("C","H","Class error (%)")
rownames(t2_total_table) <- c("C","H")
t2_total_table  <- as.table(t2_total_table)
colnames(t2_total_table) = c("C", "H")
t2_total_table 

t2_ell=ggplot(t2_df, aes(x=V1, y=V2, color=t2$herbivory))+
  geom_point(aes(shape=t2$herbivory, color=t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("July 5")+
  scale_color_manual(values=c("darkgrey", "black"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  annotation_custom(tableGrob(t2_total_table,theme=tt2 <- ttheme_default(base_size = 15)),xmin=-0.45, xmax=-0.1, ymin=0.19)+
  scale_fill_manual(values=c("darkgrey", "black"))+
  labs(x = "Dimension 1", y="Dimension 2")+theme(legend.title = element_blank())+
  theme(legend.position = c(0.1,0.15),
        legend.background = element_rect(fill = "white"))+
  theme(legend.text = element_text(size=19))+
  annotate(geom="text", x=0.53, y=-0.35, label="OBB: 13.89%",
           color="black", size=8)
  
my_theme=theme(text = element_text(size=20),
               panel.border = element_rect(colour = "black", fill=NA, size=0.5),
               axis.text.x = element_text(size = 18),
               axis.text.y = element_text(size = 18),
               axis.title.x=element_text(size = 18),
               axis.title.y=element_text(size = 18)
               
)

my_theme=theme(text = element_text(size=14),
               panel.border = element_rect(colour = "black", fill=NA, size=0.5),
               axis.text.x = element_text(size = 14),
               axis.text.y = element_text(size = 14),
               axis.title.x=element_text(size = 14),
               axis.title.y=element_text(size = 14)
               
)

t2_non_ell=ggplot(t2_df, aes(x=V1, y=V2, color=t2$herbivory))+
  geom_point(aes(shape=t2$herbivory, color=t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("July 5")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme

#t2_control
t2_control_table <- matrix(c(5,1, 17, 2,4, 33),ncol=3,byrow=TRUE)
colnames(t2_control_table) <- c("C","H","Class error (%)")
rownames(t2_control_table) <- c("C","H")
t2_control_table  <- as.table(t2_control_table)
colnames(t2_control_table) = c("C", "H")
t2_control_table 

t2_control <- randomForest(control_t2[, 44:264], y=as.factor(control_t2$herbivory), keep.forest=T, proximity=TRUE, mtry=15, importance=T, do.trace=1000, ntree=100000)
print(t2_control)
plot(t2_control)

t2_control.prox<-cmdscale(1-t2_control$proximity)
t2_control_df<-as.data.frame(t2_control.prox, row.names = NULL)

t2_control_ell=ggplot(t2_control_df, aes(x=V1, y=V2, color=control_t2$herbivory))+
  theme(legend.position = "none")+
  geom_point(aes(shape=control_t2$herbivory, color=control_t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  my_theme+theme(legend.position = "none")+
  ggtitle("Ambient")+
  scale_color_manual(values=c("darkgrey", "black"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(control_t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  annotation_custom(tableGrob(t2_control_table,theme=tt2 <- ttheme_default(base_size = 14)),xmin=-0.6, xmax=-0.4, ymin=0.37)+

  scale_fill_manual(values=c("darkgrey", "black"))+
  labs(x = "Dimension 1", y="Dimension 2")+
  theme(legend.title = element_blank())+
  theme(legend.position = "none")+
  annotate(geom="text", x=0.51, y=-0.5, label="OBB: 25%",
           color="black", size=8)
tt2 <- ttheme_default()


t2_shading_table <- matrix(c(6,0, 0, 1,5, 17),ncol=3,byrow=TRUE)
colnames(t2_shading_table) <- c("C","H","Class error (%)")
rownames(t2_shading_table) <- c("C","H")
t2_shading_table  <- as.table(t2_shading_table)
colnames(t2_shading_table) = c("C", "H")
t2_shading_table 

#"#95336f", "#e55c30","#f7a41f"

t2_control_non_ell=ggplot(t2_control_df, aes(x=V1, y=V2, color=control_t2$herbivory))+
  geom_point(aes(shape=control_t2$herbivory, color=control_t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("Control")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme+
  labs(x = "Dimension 1", y="Dimension 2")

#t2 S
#t2_control

t2_shading <- randomForest(shading_t2[, 44:264], y=as.factor(shading_t2$herbivory), keep.forest=T, proximity=TRUE, mtry=15, importance=T, do.trace=1000, ntree=100000)
print(t2_shading)
plot(t2_shading)
#b.rf<-randomForest(shading_t2$herbivory ~ ., data=shading_t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=10000, proximity=T) 


t2_shading.prox<-cmdscale(1-t2_shading$proximity)
t2_shading_df<-as.data.frame(t2_shading.prox, row.names = NULL)

t2_shading_ell=ggplot(t2_shading_df, aes(x=V1, y=V2, color=shading_t2$herbivory))+
  geom_point(aes(shape=shading_t2$herbivory, color=shading_t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("Shading")+
  scale_color_manual(values=c("darkgrey", "black"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(shading_t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  theme(legend.position = "none")+
  scale_fill_manual(values=c("darkgrey", "black"))+
  labs(x = "Dimension 1", y="Dimension 2")+
  annotate(geom="text", x=0.45, y=-0.5, label="OBB: 8.33%",
           color="black", size=8)+
  annotation_custom(tableGrob(t2_shading_table,theme=tt2 <- ttheme_default(base_size = 14)),xmin=0.35, xmax=0.35, ymin=0.35)



t2_shading_non_ell=ggplot(t2_shading_df, aes(x=V1, y=V2, color=shading_t2$herbivory))+
  geom_point(aes(shape=shading_t2$herbivory, color=shading_t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("Shading")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme

#W
t2_warming <- randomForest(warm_t2[, 44:264], y=as.factor(warm_t2$herbivory), keep.forest=T, proximity=TRUE, mtry=15, importance=T, do.trace=1000, ntree=100000)
print(t2_warming)
plot(t2_warming)
#b.rf<-randomForest(warm_t2$herbivory ~ ., data=warm_t2[, 44:264], mtry=15, importance=T, do.trace=1000, ntree=10000, proximity=T) 


t2_warming.prox<-cmdscale(1-t2_warming$proximity)
t2_warming_df<-as.data.frame(t2_warming.prox, row.names = NULL)


t2_warming_table <- matrix(c(5,1, 17, 1,5, 17),ncol=3,byrow=TRUE)
colnames(t2_warming_table) <- c("C","H","Class error (%)")
rownames(t2_warming_table) <- c("C","H")
t2_warming_table  <- as.table(t2_warming_table)
colnames(t2_warming_table) = c("C", "H")
t2_warming_table 

tt2 <- ttheme_minimal()

tt2
t2_warming_ell=ggplot(t2_warming_df, aes(x=V1, y=V2, color=warm_t2$herbivory))+
  geom_point(aes(shape=warm_t2$herbivory, color=warm_t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("Warming")+
  scale_color_manual(values=c("darkgrey", "black"))+my_theme+
  stat_ellipse(aes(x = V1,y=V2,fill=factor(warm_t2$herbivory)),
               geom="polygon",alpha=0.05)+guides(fill = FALSE)   +
  scale_fill_manual(values=c("darkgrey", "black"))+
  labs(x = "Dimension 1", y="Dimension 2")+
  annotate(geom="text", x=0.5, y=-0.5, label="OBB: 16.67%",
           color="black", size=8)+
  theme(legend.position = "none")+
  annotation_custom(tableGrob(t2_warming_table,theme=tt2 <- ttheme_default(base_size = 14)
),xmin=-0.3, xmax=-0.3, ymin=0.32)



t2_warming_non_ell=ggplot(t2_warming_df, aes(x=V1, y=V2, color=warm_t2$herbivory))+
  geom_point(aes(shape=warm_t2$herbivory, color=warm_t2$herbivory),size=4.5)+theme_classic()+
  labs(fill = "Herbivory")+
  ggtitle("Warming")+
  scale_color_manual(values=c("#440154FF", "#DCE318FF"))+my_theme

total_herbivory_graph_supervised_ell<-ggarrange(t2_ell, t2_control_ell,t2_shading_ell, t2_warming_ell,
                                                nrow=2, ncol=2, font.label = list(size = 20),
                                                labels = c("(a)", "(b)", "(c)", "(d)"))
total_herbivory_graph_supervised_ell

ggsave("15032021_fig_3_black_grey_alpha=0.05.tiff", dpi = 600, width=15, height = 14,units = "in", device='tiff')


total_herbivory_graph_supervised_nonell<-ggarrange(t2_non_ell, t2_control_non_ell,t2_shading_non_ell, t2_warming_non_ell,
                                                   nrow=1, ncol=4, common.legend = TRUE,
                                                   labels = c("A", "B", "C", "D"))
total_herbivory_graph_supervised_nonell




cowplot::plot_grid(t2_ell,t2_control_ell,t2_shading_ell,t2_warming_ell,
                   align = "v", ncol=2, nrow=2,rel_widths = c(1, 1))




ggsave("15032021_fig_3_black_grey_alpha=0.051.tiff", dpi = 600, width=10, height = 10,units = "in", device='tiff')
ggsave("15032021_2.tiff", dpi = 600, width=11, height = 11.5,units = "in", device='tiff')

###############Variable importance for T2 July 5 ####################
#model names:  

#total  t2_total
#control t2_control
#shading t2_shading
#warming #t2_warming

#total
varimp.t2_total <- importance(t2_total, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_total)
varImpPlot(t2_total)

#control
varimp.t2_control <- importance(t2_control, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_control)
varImpPlot(t2_control)


#shading
varimp.t2_shading <- importance(t2_shading, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_shading)
varImpPlot(t2_shading)

#warming
varimp.t2_warming <- importance(t2_warming, scale=TRUE)[,3] #variable importance with highest values ->more imp
sort(varimp.t2_warming)
varImpPlot(t2_warming)

#VARIABLE IMPORTANCE GRAPHS 
#TOTAL
varimp.t2_total_df <-as.data.frame(varimp.t2_total )
varimp.t2_total_df <- tibble::rownames_to_column(varimp.t2_total_df, "VOC")
varimp.t2_total_df<-varimp.t2_total_df %>% arrange(desc(varimp.t2_total), VOC)
write.csv(varimp.t2_total_df, "16012021_t2_total_varimp.csv")


t2_plot<-varimp.t2_total_df[1:20,]
names(t2_plot)[2] <- "Variable_importance"

#03032021 change the name for top 20 VOCs
t2_plot<- read_excel("16012021_t2_total_varimp.xlsx")#21032021

t2_plot<-read.table("16012021_t2_total_varimp.csv",head = TRUE, sep=",", check.names = FALSE) #Load sheet: Predicted leaf area
t2_plot<-t2_plot[1:20,]

names(t2_plot)[3] <- "Variable_importance"

names(t2_plot)

ggplot(data=t2_plot, aes(x=Variable_importance, y=VOC)) +theme_classic()+
  geom_bar(stat="identity", fill="steelblue")+
  theme_minimal()


t2_graph=ggplot(data=t2_plot, mapping = aes(x = reorder(VOC,Variable_importance), Variable_importance), col=Variable_importance)+
  theme_classic()+geom_bar(stat="identity")+
  coord_flip()+scale_fill_brewer(palette="Set2")+ggtitle("July 5")+
  labs(x=expression(),
       y=expression(MDA))+theme(legend.position = "none")+ theme_classic()+
  theme(panel.background = element_rect(colour = "black", size=1, fill=NA))+
  theme(axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        axis.title.x=element_text(size = 17),
        axis.title.y=element_text(size = 17))

library(ggplot2)
library(dplyr)
library(hrbrthemes)
install.packages("hrbrthemes")

data <- t2_plot %>%
  arrange(Variable_importance) %>%
  mutate(x=factor(VOC_std,VOC_std))

# Plot
t2_total <- ggplot(data, aes(x=x, y=Variable_importance)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=Variable_importance ), color=ifelse(data$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), 
                size=ifelse(data$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 1.3, 0.7) ) +
  geom_point( color=ifelse(data$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), 
              size=ifelse(data$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 3.5, 3) ) +
  theme_ipsum() +
  coord_flip() +
  theme(
    legend.position="none"
  ) +
  xlab("") +
  ylab("MDA") +
  ggtitle("July 5")+theme_classic()+
  theme(axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_text(size = 17),
        axis.text.y = element_text(size = 17),
        axis.title.x=element_text(size = 17),
        axis.title.y=element_text(size = 17),
        text = element_text(size=17))


t2_plot <- t2_plot %>%
  arrange(Variable_importance) %>%
  mutate(x=factor(VOC,VOC))+
  ggplot( aes(x=VOC, y=Variable_importance)) +
  geom_segment( aes(xend=name, yend=0)) +
  geom_point( size=4, color="orange") +
  coord_flip() +theme_classic()

t2_plot%>%
 arrange(Variable_importance) %>%    # First sort by val. This sort the dataframe but NOT the factor levels
  mutate(name=factor(VOC, levels=VOC)) %>%   # This trick update the factor levels
  ggplot( aes(x=VOC, y=Variable_importance)) +
  geom_segment( aes(xend=name, yend=0)) +
  geom_point( size=4, color="orange") +
  coord_flip() +theme_classic()

  xlab()
  
  


#CONTROL
varimp.t2_control_df <-as.data.frame(varimp.t2_control )
varimp.t2_control_df <- tibble::rownames_to_column(varimp.t2_control_df, "VOC")
varimp.t2_control_df<-varimp.t2_control_df %>% arrange(desc(varimp.t2_control), VOC)
write.csv(varimp.t2_control_df, "16012021_t2_control_varimp.csv")

t2_plot_control<-varimp.t2_control_df[1:20,]
names(t2_plot_control)[2] <- "Variable_importance"

#03032021 change the name for top 20 VOCs
#21032021
t2_plot_control<- read_excel("16012021_t2_control_varimp.xlsx")#21032021
t2_plot_control<-read.table("16012021_t2_control_varimp.csv",head = TRUE, sep=",") #Load sheet: Predicted leaf area
t2_plot_control<-t2_plot_control[1:20,]

names(t2_plot_control)[3] <- "Variable_importance"

ggplot(data=t2_plot_control, aes(x=Variable_importance, y=VOC)) +theme_classic()+
  geom_bar(stat="identity", fill="steelblue")+
  theme_minimal()


t2_graph_control=ggplot(data=t2_plot_control, mapping = aes(x = reorder(VOC,Variable_importance), Variable_importance), col=Variable_importance)+
  theme_classic()+geom_bar(stat="identity")+
  coord_flip()+scale_fill_brewer(palette="Set2")+ggtitle("Ambient")+
  labs(x=expression(),
       y=expression(MDA))+theme(legend.position = "none")+my_theme+
  theme(panel.background = element_rect(colour = "black", size=1, fill=NA))



data1 <- t2_plot_control %>%
  arrange(Variable_importance) %>%
  mutate(x=factor(VOC_std,VOC_std))

# Plot
t2_control<- ggplot(data1, aes(x=x, y=Variable_importance)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=Variable_importance ), color=ifelse(data1$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), size=ifelse(data1$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 1.3, 0.7) ) +
  geom_point( color=ifelse(data1$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), size=ifelse(data1$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 3.5, 3) ) +
  theme_ipsum() +
  coord_flip() +
  theme(
    legend.position="none"
  ) +
  xlab("") +
  ylab("MDA") +
  ggtitle("Ambient")+theme_classic()+
  theme(axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_text(size = 17),
        axis.text.y = element_text(size = 17),
        axis.title.x=element_text(size = 17),
        axis.title.y=element_text(size = 17),
        text = element_text(size=17))





#shading
varimp.t2_shading_df <-as.data.frame(varimp.t2_shading )
varimp.t2_shading_df <- tibble::rownames_to_column(varimp.t2_shading_df, "VOC")
varimp.t2_shading_df<-varimp.t2_shading_df %>% arrange(desc(varimp.t2_shading), VOC)
write.csv(varimp.t2_shading_df, "16012021_t2_shading_varimp.csv")


t2_plot_shading<-varimp.t2_shading_df[1:20,]
names(t2_plot_shading)[2] <- "16012021_t2_shading_varimp.csv"

#03032021 change the name for top 20 VOCs
t2_plot_shading<- read_excel("16012021_t2_shading_varimp.xlsx")#21032021

t2_plot_shading<-read.table("16012021_t2_shading_varimp.csv",head = TRUE, sep=",") #Load sheet: Predicted leaf area
t2_plot_shading<-t2_plot_shading[1:20,]

names(t2_plot_shading)[3] <- "Variable_importance"

ggplot(data=t2_plot_shading, aes(x=Variable_importance, y=VOC)) +theme_classic()+
  geom_bar(stat="identity", fill="steelblue")+
  theme_minimal()


t2_graph_shading=ggplot(data=t2_plot_shading, mapping = aes(x = reorder(VOC,Variable_importance), Variable_importance), col=Variable_importance)+
  theme_classic()+geom_bar(stat="identity")+
  coord_flip()+scale_fill_brewer(palette="Set2")+ggtitle("Shading")+
  labs(x=expression(),
       y=expression(MDA))+theme(legend.position = "none")+my_theme+
  theme(panel.background = element_rect(colour = "black", size=1, fill=NA))

data2 <- t2_plot_shading %>%
  arrange(Variable_importance) %>%
  mutate(x=factor(VOC_std,VOC_std))

# Plot
t2_shading<- ggplot(data2, aes(x=x, y=Variable_importance)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=Variable_importance ), color=ifelse(data2$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), size=ifelse(data2$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 1.3, 0.7) ) +
  geom_point( color=ifelse(data2$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), size=ifelse(data2$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 3.5, 3) ) +
  theme_ipsum() +
  coord_flip() +
  theme(
    legend.position="none"
  ) +
  xlab("") +
  ylab("MDA") +
  ggtitle("Shading")+theme_classic()+
  theme(axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_text(size = 17),
        axis.text.y = element_text(size = 17),
        axis.title.x=element_text(size = 17),
        axis.title.y=element_text(size = 17),
        text = element_text(size=17))



#warming
varimp.t2_warming_df <-as.data.frame(varimp.t2_warming )
varimp.t2_warming_df <- tibble::rownames_to_column(varimp.t2_warming_df, "VOC")
varimp.t2_warming_df<-varimp.t2_warming_df %>% arrange(desc(varimp.t2_warming), VOC)
write.csv(varimp.t2_warming_df, "16012021_t2_warming_varimp.csv")

t2_plot_warming<-varimp.t2_warming_df[1:20,]
names(t2_plot_warming)[2] <- "Variable_importance"


#03032021 change the name for top 20 VOCs
t2_plot_warming<- read_excel("16012021_t2_warming_varimp.xlsx")#21032021

t2_plot_warming<-read.table("16012021_t2_warming_varimp.csv",head = TRUE, sep=",") #Load sheet: Predicted leaf area
t2_plot_warming<-t2_plot_warming[1:20,]

names(t2_plot_warming)[3] <- "Variable_importance"

ggplot(data=t2_plot_warming, aes(x=Variable_importance, y=VOC)) +theme_classic()+
  geom_bar(stat="identity", fill="steelblue")+
  theme_minimal()


t2_graph_warming=ggplot(data=t2_plot_warming, mapping = aes(x = reorder(VOC,Variable_importance), Variable_importance), col=Variable_importance)+
  theme_classic()+geom_bar(stat="identity")+
  coord_flip()+scale_fill_brewer(palette="Set2")+ggtitle("Warming")+
  labs(x=expression(),
       y=expression(MDA))+theme(legend.position = "none")+my_theme+
  theme(panel.background = element_rect(colour = "black", size=1, fill=NA))


data3 <- t2_plot_warming %>%
  arrange(Variable_importance) %>%
  mutate(x=factor(VOC_std,VOC_std))

# Plot
t2_warming<- ggplot(data3, aes(x=x, y=Variable_importance)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=Variable_importance ), color=ifelse(data3$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), size=ifelse(data3$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 1.3, 0.7) ) +
  geom_point( color=ifelse(data3$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), "orange", "grey"), size=ifelse(data3$x %in% c("Linalool","Indole","(E)-DMNT","2-Methylbutanenitrile","Benzyl nitrile" ,"(E)-β-Ocimene"), 3.5, 3) ) +
  theme_ipsum() +
  coord_flip() +
  theme(
    legend.position="none"
  ) +
  xlab("") +
  ylab("MDA") +
  ggtitle("Warming")+theme_classic()+
  theme(axis.line = element_line(colour = "black"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank(),
        axis.text.x = element_text(size = 17),
        axis.text.y = element_text(size = 17),
        axis.title.x=element_text(size = 17),
        axis.title.y=element_text(size = 17),
        text = element_text(size=17))



T2_variable_importance<-ggarrange(t2_total,t2_control,t2_shading,t2_warming,
                                  nrow=2, ncol=2, common.legend = TRUE,font.label = list(size = 20),
                                  labels = c("(a)", "(b)", "(c)", "(d)"))
T2_variable_importance

cowplot::plot_grid(t2_total,t2_control,t2_shading,t2_warming,
                   align = "v", ncol=2, nrow=2,rel_widths = c(1, 1))

ggsave("21032021_Figure_4_not_stds_marked.tiff", dpi = 600, width=12, height = 13,units = "in", device='tiff')




my_theme=theme(text = element_text(size=17),
               panel.grid.major = element_line(size = 0.7, colour = 'white'),

               panel.border = element_blank(),
               axis.text.x = element_text(size = 17),
               axis.text.y = element_text(size = 17),
               axis.title.x=element_text(size = 17),
               axis.title.y=element_text(size = 17),
              panel.background = element_rect(color = NA))
           
           
               



T2_variable_importance<-ggarrange(t2_graph,t2_graph_control,t2_graph_shading,t2_graph_warming,
                                  nrow=2, ncol=2, common.legend = TRUE,font.label = list(size = 20),
                                  labels = c("(a)", "(b)", "(c)", "(d)"))
T2_variable_importance





ggsave("20032021_fig_4_lollipop2.tiff", dpi = 600, width=12, height = 10,units = "in", device='tiff')


total_herbivory_graph_supervised_ell<-ggarrange(t2_ell, t2_control_ell,t2_shading_ell, t2_warming_ell,
                                                nrow=1, ncol=4, common.legend = TRUE,
                                                labels = c("A", "B", "C", "D"))
total_herbivory_graph_supervised_ell


total_herbivory_graph_supervised_nonell<-ggarrange(t2_non_ell, t2_control_non_ell,t2_shading_non_ell, t2_warming_non_ell,
                                                   nrow=1, ncol=4, common.legend = TRUE,
                                                   labels = c("A", "B", "C", "D"))
total_herbivory_graph_supervised_nonell


var_imp_ell=ggarrange(t2_ell, t2_control_ell,t2_shading_ell, t2_warming_ell,
                      t2_graph,t2_graph_control,t2_graph_shading,t2_graph_warming,
                      nrow=2, ncol=4, common.legend = TRUE,
                      labels = c("(a)", "(b)", "(c)", "(d)", "(e)", "(f)", "(g)", "(h)"))

ggsave("03202021_fig_3_black_grey_alpha=0.05.tiff", dpi = 600, width=19, height = 10,units = "in", device='tiff')


var_imp_non_ell=ggarrange(t2_non_ell, t2_control_non_ell,t2_shading_non_ell, t2_warming_non_ell,
                          t2_graph,t2_graph_control,t2_graph_shading,t2_graph_warming,
                          nrow=2, ncol=4, common.legend = TRUE,
                          labels = c("A", "B", "C", "D", "E", "F", "G", "H"))





################### T.TEST FOR EMIISIONS OF VARIABLE IMPRTANCE COMPOUNDS #############
library(matrixTests)
names(July5)
d1$warming
July5<-subset(d1,(Date=="05.07.2018")) #Y
July5_control<-subset(July5,(warming=="C")) #Y
July5_shading<-subset(July5,(warming=="S")) #Y
July5_warming<-subset(July5,(warming=="W")) #Y

July5 <- July5[,c(20,43:263)]
July5_control <- July5_control[,c(20,43:263)]
July5_shading <- July5_shading[,c(20,43:263)]
July5_warming <- July5_warming[,c(20,43:263)]

#JULY 5 total
July5_C<-subset(July5,(herbivory=="C")) #Y
July5_H<-subset(July5,(herbivory=="H")) #Y

July5_C1 <- July5_C[July5_C[,1]=="C",-1]
July5_H1  <- July5_H[July5_H[,1]=="H",-1]

July_5_result <- col_t_welch(July5_C1, July5_H1)
write.csv(July_5_result, "19012021_July5_t.test.csv")
#control
July5_C_control<-subset(July5_control,(herbivory=="C")) #Y
July5_H_control<-subset(July5_control,(herbivory=="H")) #Y

July5_C1_control <- July5_C_control[July5_C_control[,1]=="C",-1]
July5_H1_control  <- July5_H_control[July5_H_control[,1]=="H",-1]

July_5_result_control <- col_t_welch(July5_C1_control, July5_H1_control)
write.csv(July_5_result_control, "19012021_July5_control_t.test.csv")

#shading
July5_C_shading<-subset(July5_shading,(herbivory=="C")) #Y
July5_H_shading<-subset(July5_shading,(herbivory=="H")) #Y

July5_C1_shading <- July5_C_shading[July5_C_shading[,1]=="C",-1]
July5_H1_shading  <- July5_H_shading[July5_H_shading[,1]=="H",-1]

July_5_result_shading <- col_t_welch(July5_C1_shading, July5_H1_shading)
write.csv(July_5_result_shading, "19012021_July5_shading_t.test.csv")

#warming

July5_C_warming<-subset(July5_warming,(herbivory=="C")) #Y
July5_H_warming<-subset(July5_warming,(herbivory=="H")) #Y

July5_C1_warming <- July5_C_warming[July5_C_warming[,1]=="C",-1]
July5_H1_warming  <- July5_H_warming[July5_H_warming[,1]=="H",-1]

July_5_result_warming <- col_t_welch(July5_C1_warming, July5_H1_warming)
write.csv(July_5_result_warming, "19012021_July5_warming_t.test.csv")


t.test(July5$DMNT[July5$herbivory == "C"], July5$DMNT[July5$herbivory == "H"])
t.test(July5_control$DMNT[July5_control$herbivory == "C"], July5_control$DMNT[July5_control$herbivory == "H"])
t.test(July5_shading$DMNT[July5_shading$herbivory == "C"], July5_shading$DMNT[July5_shading$herbivory == "H"])
t.test(July5_warming$DMNT[July5_warming$herbivory == "C"], July5_warming$DMNT[July5_warming$herbivory == "H"])


#####29012021_individual compounds from RF##########

my_theme=theme(text = element_text(size=14),
               
               axis.text.x = element_text(size = 14),
               axis.text.y = element_text(size = 14),
               axis.title.x=element_blank(),
               axis.title.y=element_blank(),
               strip.background = element_blank(),
               strip.text.x = element_text(size = 16)
)  

names(July5)
July5<-subset(d1,(Date=="05.07.2018")) #Y
July5$warming[July5$warming=="C"] <- "A"

dm<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(DMNT), mean=mean(DMNT), sd=sd(DMNT),se=sd/sqrt(N) )


dmnt <- ggplot(July5, aes(x=herbivory, y=DMNT, fill=warming)) +
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="cornflowerblue") +ggtitle("  DMNT")+
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .9))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))

dmnt=ggplot(dm, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("   (E)-DMNT")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9))


#"Butanenitrile, 2-methyl-"   

#f6d746", "#e55c30", "#2e1978"

July5$`Butanenitrile, 2-methyl-`

nitr1<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(`Butanenitrile, 2-methyl-`), mean=mean(`Butanenitrile, 2-methyl-`), sd=sd(`Butanenitrile, 2-methyl-`),se=sd/sqrt(N) )


nitro1<- ggplot(July5, aes(x=herbivory, y=July5$`Butanenitrile, 2-methyl-`, fill=warming)) +ggtitle("2-methylbutanenitrile")+
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="cornflowerblue") +
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .5))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  

nitro1=ggplot(nitr1, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+

  ggtitle("2-methylbutanenitrile")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9))


nitr2<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(`Benzyl nitrile`), mean=mean(`Benzyl nitrile`), sd=sd(`Benzyl nitrile`),se=sd/sqrt(N) )

nitro2<- ggplot(July5, aes(x=herbivory, y=July5$`Benzyl nitrile`, fill=warming)) +ggtitle("benzyl nitrile")+
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="cornflowerblue") +
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .9))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))


nitro2=ggplot(nitr2, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("benzyl nitrile")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9))

July5$warming=as.factor(July5$warming)
mon1<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(`a-Ocimene`), mean=mean(`a-Ocimene`), sd=sd(`a-Ocimene`),se=sd/sqrt(N) )


MT1<- ggplot(July5, aes(x=herbivory, y=July5$`a-Ocimene`, fill=warming)) +ggtitle("    (E)-β-ocimene")+
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="cornflowerblue") +
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .9))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))

MT1=ggplot(mon1, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("     (E)-β-ocimene")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9))

mon2<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(Linalool), mean=mean(Linalool), sd=sd(Linalool),se=sd/sqrt(N) )

MT2=ggplot(mon2, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("    linalool")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9))

MT2<- ggplot(July5, aes(x=herbivory, y=Linalool, fill=warming)) +ggtitle("linalool")+
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="black") +
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .9))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))


ben<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(Indole), mean=mean(Indole), sd=sd(Indole),se=sd/sqrt(N) )

benz=ggplot(ben, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("indole")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  aes(pattern = herbivory)+
  scale_pattern_fill_manual(
    values = c("#f6d746", "#e55c30", "#2e1978"))+
  scale_pattern_manual(values = c(C = "none", H = "circle")) +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9))

benz=ggplot(July5, aes(x=herbivory, y=Indole, fill=warming)) +ggtitle("indole")+
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="cornflowerblue") +
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .9))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))




ggarrange(dmnt, nitro2, nitro1, benz, MT1, MT2,  nrow=2, ncol=3, common.legend = TRUE,
          labels = c("(a)", "(b)", "(c)", "(d)", "(e)", "(f)"),font.label = list(size = 14, color = "black"))

ggsave("04032021_Figure_4.tiff", dpi = 600, width=9, height = 11,units = "in", device='tiff')

my_theme=theme(text = element_text(size=16),
               #panel.border = element_rect(colour = "black", fill=NA, size=0.5),
               axis.text.x = element_text(size = 12),
               axis.text.y = element_text(size = 12),
               strip.text.x = element_text(size = 16),
               strip.background = element_blank(),
               axis.title.y=element_text(size=13),
               plot.title = element_text(size = 14),
               axis.title.x=element_text(size=13),
               
)


### 04032021 stripes as fills###########
labs(x=expression(Herbivory),
     y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = response-SE, ymax = response+SE), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none") 

names(July5)
July5<-subset(d1,(Date=="05.07.2018")) #Y
July5$warming[July5$warming=="C"] <- "A"

dm<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(DMNT), mean=mean(DMNT), sd=sd(DMNT),se=sd/sqrt(N) )



dmnt=ggplot(dm, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("   (E)-DMNT")+
  theme_bw() +
  
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none")  


#"Butanenitrile, 2-methyl-"   

#f6d746", "#e55c30", "#2e1978"

July5$`Butanenitrile, 2-methyl-`

nitr1<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(`Butanenitrile, 2-methyl-`), mean=mean(`Butanenitrile, 2-methyl-`), sd=sd(`Butanenitrile, 2-methyl-`),se=sd/sqrt(N) )


nitro1<- ggplot(July5, aes(x=herbivory, y=July5$`Butanenitrile, 2-methyl-`, fill=warming)) +ggtitle("2-methylbutanenitrile")+
  facet_wrap(. ~ warming, ncol=3, nrow=1)+
  geom_boxplot(alpha=0.9) +
  stat_summary(fun=mean, geom="point", shape=20, size=5, color="black", fill="cornflowerblue") +
  theme(legend.position="none") +
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"), .5))+theme_classic()+my_theme+
  labs(x=expression(Treatment),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(  
    
    pattern_density = 0.5,  
    pattern_fill    = 'black',  
    pattern_colour  = 'black',
    
  ) +  
  
  
  nitro1=ggplot(nitr1, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("2-methylbutanenitrile")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none")  


nitr2<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(`Benzyl nitrile`), mean=mean(`Benzyl nitrile`), sd=sd(`Benzyl nitrile`),se=sd/sqrt(N) )



nitro2=ggplot(nitr2, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("benzyl nitrile")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none")  

July5$warming=as.factor(July5$warming)
mon1<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(`a-Ocimene`), mean=mean(`a-Ocimene`), sd=sd(`a-Ocimene`),se=sd/sqrt(N) )




MT1=ggplot(mon1, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("     (E)-β-ocimene")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none")  

mon2<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(Linalool), mean=mean(Linalool), sd=sd(Linalool),se=sd/sqrt(N) )

MT2=ggplot(mon2, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("    linalool")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none")  



ben<-ddply(July5 ,.(Date, warming, herbivory),summarize, N=length(Indole), mean=mean(Indole), sd=sd(Indole),se=sd/sqrt(N) )

benz=ggplot(ben, aes(x=herbivory, y=mean,  fill=warming, pattern=herbivory)) + 
  geom_bar(stat="identity", color="grey", 
           position=position_dodge()) +
  facet_wrap( ~warming, ncol=3, nrow=1,)+
  
  ggtitle("indole")+
  theme_bw() +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=14),
        axis.text = element_text(size=14),
        legend.position = "none") +theme_classic()+theme(legend.position = "none")+
  
  scale_fill_manual(values = alpha(c("#95336f", "#e55c30","#f7a41f"),.5))+my_theme+
  labs(x=expression(Herbivory),
       y=expression(Emission~rate~(ng~cm^{"-2"}~h^{"-1"})))+
  geom_col_pattern(position = position_dodge(preserve = "single"),
                   
                   pattern_fill = "black",
                   pattern_angle = 25,
                   pattern_density = 0.01,
                   pattern_spacing = 0.05,
                   pattern_key_scale_factor = 0.5) + 
  scale_pattern_manual(values = c(H = "stripe", C= "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none")))  +
  geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width=.1, size=1.1,
                position=position_dodge(.9)) +
  theme(axis.title = element_text(size=16),
        axis.text = element_text(size=15),
        legend.position = "none") +theme(legend.position = "none")  




ggarrange(dmnt, nitro2, nitro1, benz, MT1, MT2,  nrow=2, ncol=3, common.legend = TRUE,
          labels = c("(a)", "(b)", "(c)", "(d)", "(e)", "(f)"),font.label = list(size = 14, color = "black"))

ggsave("04032021_Figure_4_stripes_0-05_alpha_0.05.tiff", dpi = 600, width=9, height = 11,units = "in", device='tiff')
